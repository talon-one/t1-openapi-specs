# path: /v1/loyalty_programs/{loyaltyProgramId}
get:
  operationId: getLoyaltyProgram
  summary: Get loyalty program
  description: >
    <div class="redoc-warning small">Management API endpoints are <b>not</b>
    meant to be used in real-time integrations that directly serve your end
    users. Rate limit: 3 requests per second.</div>


    Get the specified [loyalty
    program](https://docs.talon.one/docs/product/loyalty-programs/overview).

    To list all loyalty programs in your Application, use [List loyalty
    programs](#operation/getLoyaltyPrograms).


    To list the loyalty programs that a customer profile is part of, use the

    [List customer
    data](https://docs.talon.one/integration-api#tag/Customer-profiles/operation/getCustomerInventory)
  tags:
    - Loyalty
  parameters:
    - name: loyaltyProgramId
      in: path
      required: true
      description: >
        Identifier of the loyalty program. You can get the ID with

        the [List loyalty
        programs](https://docs.talon.one/management-api#tag/Loyalty/operation/getLoyaltyPrograms)
        endpoint.
      example: 8
      schema:
        type: integer
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - id
                  - created
                properties:
                  id:
                    type: integer
                    description: The internal ID of this entity.
                    example: 6
                  created:
                    type: string
                    format: date-time
                    description: The time this entity was created.
                    example: '2020-06-10T09:05:27.993483Z'
              - type: object
                properties:
                  title:
                    type: string
                    description: The display title for the Loyalty Program.
                    example: Point collection
                  description:
                    type: string
                    description: Description of our Loyalty Program.
                    example: Customers collect 10 points per 1$ spent
                  subscribedApplications:
                    type: array
                    description: >-
                      A list containing the IDs of all applications that are
                      subscribed to this Loyalty Program.
                    example:
                      - 132
                      - 97
                    items:
                      type: integer
                  defaultValidity:
                    type: string
                    description: >
                      The default duration after which new loyalty points should
                      expire. Can be 'unlimited' or a specific time.

                      The time format is a number followed by one letter
                      indicating the time unit, like '30s', '40m', '1h', '5D',
                      '7W', or 10M'. These rounding suffixes are also supported:

                      - '_D' for rounding down. Can be used as a suffix after
                      'D', and signifies the start of the day.

                      - '_U' for rounding up. Can be used as a suffix after 'D',
                      'W', and 'M', and signifies the end of the day, week, and
                      month.
                    example: 2W_U
                  defaultPending:
                    type: string
                    description: >
                      The default duration of the pending time after which
                      points should be valid. Can be 'immediate' or a specific
                      time.

                      The time format is a number followed by one letter
                      indicating the time unit, like '30s', '40m', '1h', '5D',
                      '7W', or 10M'. These rounding suffixes are also supported:

                      - '_D' for rounding down. Can be used as a suffix after
                      'D', and signifies the start of the day.

                      - '_U' for rounding up. Can be used as a suffix after 'D',
                      'W', and 'M', and signifies the end of the day, week, and
                      month.
                    example: immediate
                  allowSubledger:
                    type: boolean
                    description: >-
                      Indicates if this program supports subledgers inside the
                      program.
                    example: false
                  usersPerCardLimit:
                    type: integer
                    minimum: 0
                    example: 111
                    description: >
                      The max amount of user profiles with whom a card can be
                      shared. This can be set to 0 for no limit.

                      This property is only used when `cardBased` is `true`.
                  sandbox:
                    type: boolean
                    description: >-
                      Indicates if this program is a live or sandbox program.
                      Programs of a given type can only be connected to
                      Applications of the same type.
                    title: Sandbox
                    example: true
                  programJoinPolicy:
                    type: string
                    enum:
                      - not_join
                      - points_activated
                      - points_earned
                    description: >
                      The policy that defines when the customer joins the
                      loyalty program.
                        - `not_join`: The customer does not join the loyalty program but can still earn and spend loyalty points.

                           **Note**: The customer does not have a program join date.
                        - `points_activated`: The customer joins the loyalty program only when their earned loyalty points become active for the first time.
                        - `points_earned`: The customer joins the loyalty program when they earn loyalty points for the first time.
                  tiersExpirationPolicy:
                    type: string
                    enum:
                      - tier_start_date
                      - program_join_date
                      - customer_attribute
                      - absolute_expiration
                    description: >
                      The policy that defines how tier expiration, used to
                      reevaluate the customer's current tier, is determined.
                       - `tier_start_date`: The tier expiration is relative to when the customer joined the current tier.
                       - `program_join_date`: The tier expiration is relative to when the customer joined the loyalty program.
                       - `customer_attribute`: The tier expiration is determined by a custom customer attribute.
                       - `absolute_expiration`: The tier is reevaluated at the start of each tier cycle. For this policy, it is required to provide a `tierCycleStartDate`.
                  tierCycleStartDate:
                    type: string
                    format: date-time
                    description: >
                      Timestamp at which the tier cycle starts for all customers
                      in the loyalty program.


                      **Note**: This is only required when the tier expiration
                      policy is set to `absolute_expiration`.
                    example: '2021-09-12T10:12:42Z'
                  tiersExpireIn:
                    type: string
                    description: >
                      The amount of time after which the tier expires and is
                      reevaluated.


                      The time format is an **integer** followed by one letter
                      indicating the time unit.

                      Examples: `30s`, `40m`, `1h`, `5D`, `7W`, `10M`, `15Y`.


                      Available units:


                      - `s`: seconds

                      - `m`: minutes

                      - `h`: hours

                      - `D`: days

                      - `W`: weeks

                      - `M`: months

                      - `Y`: years


                      You can round certain units up or down:

                      - `_D` for rounding down days only. Signifies the start of
                      the day.

                      - `_U` for rounding up days, weeks, months and years.
                      Signifies the end of the day, week, month or year.
                    example: 27W_U
                  tiersDowngradePolicy:
                    type: string
                    enum:
                      - one_down
                      - balance_based
                    description: >
                      The policy that defines how customer tiers are downgraded
                      in the loyalty program after tier reevaluation.
                       - `one_down`: If the customer doesn't have enough points to stay in the current tier, they are downgraded by one tier.
                       - `balance_based`: The customer's tier is reevaluated based on the amount of active points they have at the moment.
                  cardCodeSettings:
                    type: object
                    properties:
                      validCharacters:
                        type: array
                        description: >
                          List of characters used to generate the random parts
                          of a code.
                        example:
                          - A
                          - B
                          - C
                          - D
                          - E
                          - F
                          - G
                          - H
                          - I
                          - J
                          - K
                          - L
                          - M
                          - 'N'
                          - O
                          - P
                          - Q
                          - R
                          - S
                          - T
                          - U
                          - V
                          - W
                          - X
                          - 'Y'
                          - Z
                          - '0'
                          - '1'
                          - '2'
                          - '3'
                          - '4'
                          - '5'
                          - '6'
                          - '7'
                          - '8'
                          - '9'
                        items:
                          type: string
                      couponPattern:
                        type: string
                        description: >
                          The pattern used to generate codes, such as coupon
                          codes, referral codes, and loyalty cards. The
                          character `#` is a placeholder and is replaced by a
                          random character from the `validCharacters` set.
                        maxLength: 100
                        minLength: 3
                        pattern: ^[A-Za-z0-9_#-]*$
                        example: SUMMER-####-####
                    additionalProperties: false
                    required:
                      - couponPattern
                      - validCharacters
                  returnPolicy:
                    type: string
                    enum:
                      - only_pending
                      - within_balance
                      - unlimited
                    description: >
                      The policy that defines the rollback of points in case of
                      a partially returned, cancelled, or reopened [customer
                      session](https://docs.talon.one/docs/dev/concepts/entities/customer-sessions).

                      - `only_pending`: Only pending points can be rolled back.

                      - `within_balance`: Available active points can be rolled
                      back if there aren't enough pending points. The active
                      balance of the customer cannot be negative.

                      - `unlimited`: Allows negative balance without any limit.
              - type: object
                description: A Loyalty Program
                required:
                  - id
                  - name
                  - title
                  - description
                  - accountID
                  - defaultValidity
                  - defaultPending
                  - subscribedApplications
                  - allowSubledger
                  - timezone
                  - cardBased
                  - sandbox
                properties:
                  id:
                    type: integer
                    description: The ID of loyalty program.
                    example: 139
                  accountID:
                    type: integer
                    description: The ID of the Talon.One account that owns this program.
                    example: 1
                  name:
                    type: string
                    description: >-
                      The internal name for the Loyalty Program. This is an
                      immutable value.
                    example: my_program
                  tiers:
                    type: array
                    description: The tiers in this loyalty program.
                    items:
                      allOf:
                        - type: object
                          required:
                            - id
                            - created
                          properties:
                            id:
                              type: integer
                              description: The internal ID of this entity.
                              example: 6
                            created:
                              type: string
                              format: date-time
                              description: The time this entity was created.
                              example: '2020-06-10T09:05:27.993483Z'
                        - type: object
                          required:
                            - programID
                          properties:
                            programID:
                              type: integer
                              description: >-
                                The ID of the loyalty program that owns this
                                entity.
                              example: 125
                            programName:
                              type: string
                              description: >-
                                The integration name of the loyalty program that
                                owns this entity.
                              example: Loyalty_program
                            programTitle:
                              type: string
                              description: >-
                                The Campaign Manager-displayed name of the
                                loyalty program that owns this entity.
                              example: Loyalty program
                        - type: object
                          description: A tier in a loyalty program.
                          required:
                            - name
                            - minPoints
                          properties:
                            name:
                              type: string
                              description: The name of the tier.
                              example: Gold
                            minPoints:
                              type: number
                              minimum: 0
                              maximum: 999999999999.99
                              description: >-
                                The minimum amount of points required to enter
                                the tier.
                              example: 300
                    example:
                      - name: Gold
                        minPoints: 300
                        id: 3
                        created: '2021-06-10T09:05:27.993483Z'
                        programID: 139
                      - name: Silver
                        minPoints: 200
                        id: 2
                        created: '2021-06-10T09:04:59.355258Z'
                        programID: 139
                      - name: Bronze
                        minPoints: 100
                        id: 1
                        created: '2021-06-10T09:04:39.355258Z'
                        programID: 139
                  timezone:
                    type: string
                    description: A string containing an IANA timezone descriptor.
                    example: Europe/Berlin
                    minLength: 1
                  cardBased:
                    type: boolean
                    description: |
                      Defines the type of loyalty program:
                      - `true`: the program is a card-based.
                      - `false`: the program is profile-based.
                    default: false
                    example: true
                  canUpdateTiers:
                    type: boolean
                    description: |
                      `True` if the tier definitions can be updated.
                    default: false
                    example: true
                  canUpdateJoinPolicy:
                    type: boolean
                    description: |
                      `True` if the program join policy can be updated.
                    example: true
                  canUpdateTierExpirationPolicy:
                    type: boolean
                    description: |
                      `True` if the tier expiration policy can be updated.
                    example: true
                  canUpgradeToAdvancedTiers:
                    type: boolean
                    description: >
                      `True` if the program can be upgraded to use the
                      `tiersExpireIn` and `tiersDowngradePolicy` properties.
                    default: false
                    example: true
                  canUpdateSubledgers:
                    type: boolean
                    description: >
                      `True` if the `allowSubledger` property can be updated in
                      the loyalty program.
                    default: false
                    example: true
