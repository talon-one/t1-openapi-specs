put:
  operationId: addLoyaltyPoints
  summary: Add points to customer profile
  description: >
    <div class="redoc-warning small">Management API endpoints are <b>not</b>
    meant to be used in real-time integrations that directly serve your end
    users. Rate limit: 3 requests per second.</div>


    Add points in the specified loyalty program for the given customer.


    To get the `integrationId` of the profile from a `sessionId`, use the

    [Update customer
    session](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2)
    endpoint.
  tags:
    - Loyalty
  parameters:
    - name: loyaltyProgramId
      in: path
      description: The identifier for the loyalty program.
      example: '45'
      required: true
      schema:
        type: string
    - in: path
      required: true
      name: integrationId
      description: >
        The integration identifier for this customer profile. Must be:

        - Unique within the deployment.

        - Stable for the customer. Do not use an ID that the customer can update
        themselves. For example, you can use a database ID.


        Once set, you cannot update this identifier.
      example: customer1
      schema:
        type: string
  requestBody:
    content:
      application/json:
        schema:
          type: object
          description: Points to add.
          required:
            - points
          properties:
            points:
              type: number
              exclusiveMinimum: 0
              maximum: 999999999999.99
              description: Amount of loyalty points.
              example: 300
            name:
              type: string
              description: Name / reason for the point addition.
              example: Compensation
            validityDuration:
              type: string
              description: >
                The time format is either:

                - `immediate` or,

                - an **integer** followed by one letter indicating the time
                unit.


                Examples: `immediate`, `30s`, `40m`, `1h`, `5D`, `7W`, `10M`,
                `15Y`.


                Available units:


                - `s`: seconds

                - `m`: minutes

                - `h`: hours

                - `D`: days

                - `W`: weeks

                - `M`: months

                - `Y`: years


                You can round certain units up or down:

                - `_D` for rounding down days only. Signifies the start of the
                day.

                - `_U` for rounding up days, weeks, months and years. Signifies
                the end of the day, week, month or year.


                If passed, `validUntil` should be omitted.
              example: 5D
            validUntil:
              type: string
              format: date-time
              description: >
                Date and time when points should expire. The value should be
                provided in RFC 3339 format.

                If passed, `validityDuration` should be omitted.
              example: '2021-07-20T22:00:00Z'
            pendingDuration:
              type: string
              description: >
                The amount of time before the points are considered valid.


                The time format is either:

                - `immediate` or,

                - an **integer** followed by one letter indicating the time
                unit.


                Examples: `immediate`, `30s`, `40m`, `1h`, `5D`, `7W`, `10M`,
                `15Y`.


                Available units:


                - `s`: seconds

                - `m`: minutes

                - `h`: hours

                - `D`: days

                - `W`: weeks

                - `M`: months

                - `Y`: years


                You can round certain units up or down:

                - `_D` for rounding down days only. Signifies the start of the
                day.

                - `_U` for rounding up days, weeks, months and years. Signifies
                the end of the day, week, month or year.
              example: 12h
            pendingUntil:
              type: string
              format: date-time
              description: >
                Date and time after the points are considered valid. The value
                should be provided in RFC 3339 format.

                If passed, `pendingDuration` should be omitted.
              example: '2021-07-20T22:00:00Z'
            subledgerId:
              type: string
              description: >-
                ID of the subledger the points are added to. If there is no
                existing subledger with this ID, the subledger is created
                automatically.
              example: sub-123
            applicationId:
              type: integer
              description: >-
                ID of the Application that is connected to the loyalty program.
                It is displayed in your Talon.One deployment URL.
              example: 322
    description: body
    required: true
  responses:
    '204':
      description: No Content
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties: &ref_0
              message:
                type: string
              errors:
                type: array
                description: >-
                  An array of individual problems encountered during the
                  request.
                items:
                  type: object
                  required:
                    - source
                    - title
                  properties:
                    title:
                      type: string
                      description: Short description of the problem.
                    details:
                      type: string
                      description: >-
                        Longer description of this specific instance of the
                        problem.
                    source:
                      type: object
                      description: >
                        The source of the current error, exactly one of
                        `pointer`, `parameter` or `line` will be defined.
                      properties:
                        pointer:
                          type: string
                          description: >-
                            Pointer to the path in the payload that caused this
                            error.
                        parameter:
                          type: string
                          description: Query parameter that caused this error.
                        line:
                          type: string
                          description: >-
                            Line number in uploaded multipart file that caused
                            this error. 'N/A' if unknown.
                        resource:
                          type: string
                          description: Pointer to the resource that caused this error.
              StatusCode:
                type: integer
                description: The error code
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties: *ref_0
    '404':
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties: *ref_0
